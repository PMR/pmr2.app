================
PMR2 Root Object
================

Before we get started, we need to import the required classes.

    >>> from pmr2.app.browser.root import PMR2AddForm
    >>> from pmr2.app.tests.base import TestRequest

Also set up the test environment, create a request object

    >>> from plone.z3cform.tests import setup_defaults
    >>> setup_defaults()
    >>> request = TestRequest()

We can have the add form.

    >>> add = PMR2AddForm(self.folder, request)

    >>> html = add()
    >>> 'Title' in html
    True

Once the form is filled out and the add button is clicked, ...

    >>> request = TestRequest(
    ...     form={
    ...         'form.widgets.id': 'test',
    ...         'form.widgets.title': u'Test Repository',
    ...         'form.buttons.add': 1
    ...     })

    >>> add = PMR2AddForm(self.folder, request)

Do the actual update.

    >>> add.update()

PMR2 is now added to the folder

    >>> sorted(self.folder.keys())
    ['test']
    >>> self.folder[u'test']
    <PMR2 at ...>
    >>> self.folder[u'test'].title
    u'Test Repository'

The internal containers should also be created

    >>> self.folder.test.workspace
    <WorkspaceContainer at ...>
    >>> self.folder.test.sandbox
    <SandboxContainer at ...>
    >>> self.folder.test.exposure
    <ExposureContainer at ...>

These should not return anything, yet.

    >>> self.folder.test.workspace.get_path()
    >>> self.folder.test.sandbox.get_path()

Should fail if we try to add this again as the object already exists.

    >>> request = TestRequest(
    ...     form={
    ...         'form.widgets.id': 'test',
    ...         'form.widgets.title': u'Test Repository',
    ...         'form.buttons.add': 1
    ...     })

    >>> add = PMR2AddForm(self.folder, request)
    >>> html = add()
    >>> from pmr2.app.interfaces import ObjectIdExistsError
    >>> ObjectIdExistsError.__doc__ in html
    True

Now we try to edit.

    >>> from pmr2.app.browser.root import PMR2EditForm
    >>> self.folder.test
    <PMR2 at ...>
    >>> self.folder.test.repo_root
    >>> request = TestRequest()
    >>> edit = PMR2EditForm(self.folder.test, request)
    >>> html = edit()
    >>> 'repo_root' in html
    True

Test out invalid value

    >>> request = TestRequest(
    ...     form={
    ...         'form.widgets.repo_root': u'not a path',
    ...         'form.buttons.apply': 1,
    ...     })

    >>> edit = PMR2EditForm(self.folder.test, request)
    >>> html = edit()
    >>> from pmr2.app.interfaces import InvalidPathError
    >>> InvalidPathError.__doc__ in html
    True

Now a real path.  Create temporary directory first.

    >>> import tempfile
    >>> tmproot = tempfile.mkdtemp()
    >>> request = TestRequest(
    ...     form={
    ...         'form.widgets.repo_root': tmproot,
    ...         'form.buttons.apply': 1,
    ...     })

    >>> edit = PMR2EditForm(self.folder.test, request)
    >>> html = edit.update()

The repository root should be set

    >>> self.folder.test.repo_root == tmproot
    True

The workspace and sandbox containers should now have a path.

    >>> self.folder.test.workspace.get_path()
    '...workspace'
    >>> self.folder.test.sandbox.get_path()
    '...sandbox'

Need to clean up the temporary files.

    >>> import shutil
    >>> shutil.rmtree(tmproot)
